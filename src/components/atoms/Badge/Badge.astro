---
/**
 * Badge Component
 * Hunter Galloway Design System - Atomic Component
 * 
 * A flexible badge component for status indicators, labels, and notifications.
 * Uses design tokens for consistent styling.
 */

import type { BadgeProps } from './Badge.types';
import { semantic } from '../../../tokens/semantic';

interface Props extends BadgeProps {}

const {
  text,
  variant = 'primary',
  size = 'md',
  class: additionalClasses = '',
} = Astro.props;

// Build CSS classes using semantic design tokens
const badgeClasses = [
  'hg-badge',
  `hg-badge--${variant}`,
  `hg-badge--${size}`,
  'hg-badge--pill', // Default to pill shape for simplicity
  additionalClasses,
].filter(Boolean).join(' ');
---

<span class={badgeClasses}>
  {text}
</span>

<style define:vars={{
  brandPrimary: semantic.color.brand.primary,
  textPrimary: semantic.color.text.primary,
  textInverse: semantic.color.text.inverse,
  surfaceSecondary: semantic.color.surface.secondary,
  textSecondary: semantic.color.text.secondary,
  statusSuccess: semantic.color.status.success,
  statusWarning: semantic.color.status.warning,
  statusError: semantic.color.status.error,
  statusInfo: semantic.color.status.info,
  spaceXs: semantic.space.xs,
  spaceSm: semantic.space.sm,
  spaceMd: semantic.space.md,
  fontSizeXs: semantic.typography.size.xs,
  fontSizeSm: semantic.typography.size.sm,
  fontSizeMd: semantic.typography.size.md,
  fontWeightStrong: semantic.typography.weight.strong,
  radiusSm: semantic.radius.sm,
  radiusPill: semantic.radius.pill,
}}}>
/* Badge component base styles using design tokens */
.hg-badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: var(--fontWeightStrong);
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  line-height: 1;
}

/* Variant styles using semantic tokens */
.hg-badge--primary {
  background-color: var(--brandPrimary);
  color: var(--textPrimary);
}

.hg-badge--secondary {
  background-color: var(--surfaceSecondary);
  color: var(--textSecondary);
}

.hg-badge--success {
  background-color: var(--statusSuccess);
  color: var(--textInverse);
}

.hg-badge--warning {
  background-color: var(--statusWarning);
  color: var(--textPrimary);
}

.hg-badge--error {
  background-color: var(--statusError);
  color: var(--textInverse);
}

.hg-badge--info {
  background-color: var(--statusInfo);
  color: var(--textInverse);
}

/* Size variants using semantic tokens */
.hg-badge--sm {
  padding: calc(var(--spaceXs) * 0.5) var(--spaceXs);
  font-size: var(--fontSizeXs);
}

.hg-badge--md {
  padding: calc(var(--spaceXs) * 0.5) var(--spaceSm);
  font-size: var(--fontSizeSm);
}

.hg-badge--lg {
  padding: var(--spaceXs) var(--spaceMd);
  font-size: var(--fontSizeMd);
}

/* Default shape - pill */
.hg-badge--pill {
  border-radius: var(--radiusPill);
}

/* Ensure proper spacing for badges with icons */
.hg-badge > * + * {
  margin-left: calc(var(--spaceXs) * 0.5);
}
</style>