---
/**
 * HeroWidget Organism
 * Flexible, tokenized hero for multiple page types
 */

import Container from '../../atoms/Container/Container.astro';
import Button from '../../atoms/Button/Button.astro';
import { semantic } from '../../../tokens/semantic';
import { component } from '../../../tokens/component';

type Variant = 'general' | 'professional' | 'calculator';
type MediaPosition = 'left' | 'right';

interface BenefitItem {
  text: string;
  tooltip?: string;
}

interface CTAConfig {
  text: string;
  href: string;
}

interface ImageConfig {
  desktop: string;
  mobile: string;
  alt: string;
}

interface ReviewsConfig {
  logoSrc?: string;
  text: string; // e.g., "Based on 2000+ reviews"
}

interface Props {
  variant?: Variant;
  mediaPosition?: MediaPosition;
  titleHtml: string; // supports inline markup via set:html
  benefits: BenefitItem[];
  cta: CTAConfig;
  image: ImageConfig;
  yearsExperience?: string; // e.g., "14"
  reviews?: ReviewsConfig;
}

const {
  variant = 'general',
  mediaPosition = 'right',
  titleHtml,
  benefits,
  cta,
  image,
  yearsExperience = '14',
  reviews = { logoSrc: '/images/google.svg', text: 'Based on 2000+ reviews' },
} = Astro.props as Props;

const isMediaLeft = mediaPosition === 'left';
---

<div class="hero-widget-container">
  <div class="hero-widget-inner">
    <div class="hero-widget-content">
      
      <!-- Title Section -->
      <div class="hero-widget-title">
        <div class="hero-widget-title-inner">
          <span set:html={titleHtml} />
        </div>
      </div>

      <!-- Benefits Section -->
      <div class="hero-widget-benefits">
        {benefits.map((item) => (
          <div class="hero-widget-benefit-item">
            <div class="hero-widget-checkmark-container">
              <div class="hero-widget-checkmark">
                <div class="hero-widget-checkmark-bg"></div>
                <div class="hero-widget-checkmark-check"></div>
              </div>
            </div>
            <div class="hero-widget-benefit-text">
              {item.tooltip ? (
                <div class="hero-widget-benefit-tooltip">
                  <div class="hero-widget-benefit-tooltip-trigger">
                    <span class="item_hover">
                      {item.text}
                      <span class="item_tooltip hidden">{item.tooltip}</span>
                    </span>
                  </div>
                  <div class="hero-widget-benefit-tooltip-text">
                    {item.text === 'Market-leading' ? ' loan approval rate in Australia of 97%' : 
                     item.text === '#1 rated' ? ' Mortgage Broker in Brisbane' : ''}
                  </div>
                </div>
              ) : (
                <div class="hero-widget-benefit-text-normal">
                  {item.text}
                </div>
              )}
            </div>
          </div>
        ))}
      </div>

      <!-- CTA Button -->
      <div class="hero-widget-cta">
        <div class="hero-widget-cta-text">
          <a href={cta.href} class="hero-widget-cta-link">{cta.text}</a>
        </div>
      </div>

      <!-- Features Section -->
      <div class="hero-widget-features">
        <div class="hero-widget-experience">
          <div class="hero-widget-experience-circle">
            <div class="hero-widget-experience-number">{yearsExperience}</div>
          </div>
          <div class="hero-widget-experience-text">
            <div>Years<br/>of experience</div>
          </div>
        </div>
        <div class="hero-widget-reviews">
          <div class="hero-widget-logo-container">
            {reviews.logoSrc && (
              <div class="hero-widget-logo">
                <img src={reviews.logoSrc} alt="reviews logo" />
              </div>
            )}
          </div>
          <div class="hero-widget-reviews-text">
            <div set:html={reviews.text} />
          </div>
        </div>
      </div>
    </div>

    <!-- Media Section -->
    <img 
      class="hero-widget-media" 
      src={image.desktop} 
      alt={image.alt}
      loading="eager"
    />
  </div>
</div>

<style define:vars={{
  // Layout
  containerMaxWidth: component.heroWidget.layout.containerMaxWidth,
  contentMaxWidth: component.heroWidget.layout.contentMaxWidth,
  checkmarkContainerMaxWidth: component.heroWidget.layout.checkmarkContainerMaxWidth,
  mediaMaxWidth: component.heroWidget.layout.mediaMaxWidth,
  mediaWidth: component.heroWidget.layout.mediaWidth,
  minHeight: component.heroWidget.layout.minHeight,
  
  // Spacing
  paddingX: component.heroWidget.spacing.paddingX,
  paddingTop: component.heroWidget.spacing.paddingTop,
  paddingBottom: component.heroWidget.spacing.paddingBottom,
  paddingBottomSmall: component.heroWidget.spacing.paddingBottomSmall,
  paddingBottomMedium: component.heroWidget.spacing.paddingBottomMedium,
  paddingTopLarge: component.heroWidget.spacing.paddingTopLarge,
  paddingRight: component.heroWidget.spacing.paddingRight,
  paddingContainer: component.heroWidget.spacing.paddingContainer,
  paddingPixel: component.heroWidget.spacing.paddingPixel,
  
  // Gaps
  gapSmall: component.heroWidget.gaps.small,
  gapMedium: component.heroWidget.gaps.medium,
  gapLarge: component.heroWidget.gaps.large,
  gapExtraLarge: component.heroWidget.gaps.extraLarge,
  
  // Checkmark dimensions
  checkmarkWidth: component.heroWidget.dimensions.checkmark.width,
  checkmarkHeight: component.heroWidget.dimensions.checkmark.height,
  checkmarkInnerWidth: component.heroWidget.dimensions.checkmark.innerWidth,
  checkmarkInnerHeight: component.heroWidget.dimensions.checkmark.innerHeight,
  checkmarkCheckWidth: component.heroWidget.dimensions.checkmark.checkWidth,
  checkmarkCheckHeight: component.heroWidget.dimensions.checkmark.checkHeight,
  checkmarkLeftOffset: component.heroWidget.dimensions.checkmark.leftOffset,
  checkmarkTopOffset: component.heroWidget.dimensions.checkmark.topOffset,
  checkmarkCheckLeftOffset: component.heroWidget.dimensions.checkmark.checkLeftOffset,
  checkmarkCheckTopOffset: component.heroWidget.dimensions.checkmark.checkTopOffset,
  
  // Button dimensions
  buttonWidth: component.heroWidget.dimensions.button.width,
  buttonMinHeight: component.heroWidget.dimensions.button.minHeight,
  buttonBorderRadius: component.heroWidget.dimensions.button.borderRadius,
  
  // Experience dimensions
  experienceWidth: component.heroWidget.dimensions.experience.width,
  experienceHeight: component.heroWidget.dimensions.experience.height,
  experienceFontSize: component.heroWidget.dimensions.experience.fontSize,
  experienceLineHeight: component.heroWidget.dimensions.experience.lineHeight,
  experienceBorderRadius: component.heroWidget.dimensions.experience.borderRadius,
  experienceOutlineWidth: component.heroWidget.dimensions.experience.outlineWidth,
  experienceOutlineOffset: component.heroWidget.dimensions.experience.outlineOffset,
  
  // Logo dimensions
  logoWidth: component.heroWidget.dimensions.logo.width,
  logoHeight: component.heroWidget.dimensions.logo.height,
  logoMaxWidth: component.heroWidget.dimensions.logo.maxWidth,
  
  // Colors
  colorGrey27: component.heroWidget.colors.grey27,
  colorGrey15: component.heroWidget.colors.grey15,
  colorChartreuseGreen52: component.heroWidget.colors.chartreuseGreen52,
  colorWhiteSolid: component.heroWidget.colors.whiteSolid,
  colorOrange64: component.heroWidget.colors.orange64,
  
  // Typography
  titleFontSize: component.heroWidget.typography.title.fontSize,
  titleLineHeight: component.heroWidget.typography.title.lineHeight,
  titleWeightExtrabold: component.heroWidget.typography.title.weightExtrabold,
  titleWeightNormal: component.heroWidget.typography.title.weightNormal,
  
  bodyFontSize: component.heroWidget.typography.body.fontSize,
  bodyLineHeight: component.heroWidget.typography.body.lineHeight,
  bodyWeightNormal: component.heroWidget.typography.body.weightNormal,
  bodyWeightSemibold: component.heroWidget.typography.body.weightSemibold,
  
  buttonFontSize: component.heroWidget.typography.button.fontSize,
  buttonLineHeight: component.heroWidget.typography.button.lineHeight,
  buttonWeightSemibold: component.heroWidget.typography.button.weightSemibold,
  
  experienceFontSize: component.heroWidget.typography.experience.fontSize,
  experienceLineHeight: component.heroWidget.typography.experience.lineHeight,
  experienceWeightExtrabold: component.heroWidget.typography.experience.weightExtrabold,
  
  // Shadows
  tooltipShadow: component.heroWidget.shadows.tooltip,
  tooltipWidth: component.heroWidget.tooltip.width,
  
  // Responsive
  responsiveBreakpoint: component.heroWidget.responsive.breakpoint,
  mobilePadding: component.heroWidget.responsive.mobilePadding,
  mobileGap: component.heroWidget.responsive.mobileGap,
  mobileMediaWidth: component.heroWidget.responsive.mobileMediaWidth,
}}>

.hero-widget-container {
  align-self: stretch;
  padding-left: var(--paddingX);
  padding-right: var(--paddingX);
  padding-top: var(--paddingTop);
  padding-bottom: var(--paddingBottom);
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  display: inline-flex;
}

.hero-widget-inner {
  width: 100%;
  max-width: var(--containerMaxWidth);
  padding-left: var(--paddingContainer);
  padding-right: var(--paddingContainer);
  overflow: hidden;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  display: flex;
}

.hero-widget-content {
  align-self: stretch;
  min-height: var(--minHeight);
  justify-content: flex-start;
  align-items: flex-start;
  display: inline-flex;
  flex: 1 1 0;
  max-width: var(--contentMaxWidth);
  gap: var(--gapLarge);
}

.hero-widget-title {
  align-self: stretch;
  padding-bottom: var(--paddingBottomMedium);
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  display: flex;
}

.hero-widget-title-inner {
  align-self: stretch;
  justify-content: center;
  display: flex;
  flex-direction: column;
}

.hero-widget-benefits {
  align-self: stretch;
  padding-bottom: var(--paddingBottomSmall);
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  gap: var(--gapSmall);
  display: flex;
}

.hero-widget-benefit-item {
  align-self: stretch;
  justify-content: flex-start;
  align-items: flex-start;
  display: inline-flex;
}

.hero-widget-checkmark-container {
  max-width: var(--checkmarkContainerMaxWidth);
  padding-right: var(--paddingRight);
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  display: inline-flex;
}

.hero-widget-checkmark {
  max-width: var(--contentMaxWidth);
  overflow: hidden;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  display: flex;
  width: var(--checkmarkWidth);
  height: var(--checkmarkHeight);
  justify-content: center;
  align-items: center;
  overflow: hidden;
}

.hero-widget-checkmark-bg {
  width: var(--checkmarkInnerWidth);
  height: var(--checkmarkInnerHeight);
  left: var(--checkmarkLeftOffset);
  top: var(--checkmarkTopOffset);
  position: absolute;
  background: var(--colorChartreuseGreen52);
}

.hero-widget-checkmark-check {
  width: var(--checkmarkCheckWidth);
  height: var(--checkmarkCheckHeight);
  left: var(--checkmarkCheckLeftOffset);
  top: var(--checkmarkCheckTopOffset);
  position: absolute;
  background: var(--colorWhiteSolid);
}

.hero-widget-benefit-text {
  align-self: stretch;
  flex: justify-content: flex-start;
  align-items: flex-start;
  gap: 0;
  display: flex;
}

.hero-widget-benefit-tooltip {
  flex: justify-content: flex-start;
  align-items: flex-start;
  display: flex;
}

.hero-widget-benefit-tooltip-trigger {
  justify-content: center;
  display: flex;
  flex-direction: column;
  color: var(--colorGrey15);
  font-size: var(--bodyFontSize);
  font-family: 'Open Sans';
  font-weight: var(--bodyWeightSemibold);
  text-decoration: underline;
  line-height: var(--bodyLineHeight);
  word-wrap: break-word;
}

.hero-widget-benefit-tooltip-text {
  justify-content: center;
  display: flex;
  flex-direction: column;
  color: var(--colorGrey15);
  font-size: var(--bodyFontSize);
  font-family: 'Open Sans';
  font-weight: var(--bodyWeightNormal);
  line-height: var(--bodyLineHeight);
  word-wrap: break-word;
}

.hero-widget-benefit-text-normal {
  justify-content: center;
  display: flex;
  flex-direction: column;
  color: var(--colorGrey15);
  font-size: var(--bodyFontSize);
  font-family: 'Open Sans';
  font-weight: var(--bodyWeightNormal);
  line-height: var(--bodyLineHeight);
  word-wrap: break-word;
}

.hero-widget-cta {
  width: var(--buttonWidth);
  max-width: var(--buttonWidth);
  min-height: var(--buttonMinHeight);
  background: var(--colorOrange64);
  border-radius: var(--buttonBorderRadius);
  justify-content: center;
  align-items: center;
  display: inline-flex;
}

.hero-widget-cta-text {
  text-align: center;
  justify-content: center;
  display: flex;
  flex-direction: column;
  color: var(--colorGrey15);
  font-size: var(--buttonFontSize);
  font-family: 'Open Sans';
  font-weight: var(--buttonWeightSemibold);
  line-height: var(--buttonLineHeight);
  word-wrap: break-word;
}

.hero-widget-cta-link {
  color: inherit;
  text-decoration: none;
}

.hero-widget-features {
  align-self: stretch;
  padding-top: var(--paddingTopLarge);
  justify-content: flex-start;
  align-items: flex-start;
  gap: var(--gapExtraLarge);
  display: inline-flex;
}

.hero-widget-experience {
  align-self: stretch;
  justify-content: flex-start;
  align-items: center;
  gap: var(--gapMedium);
  display: flex;
}

.hero-widget-experience-circle {
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  display: inline-flex;
  width: var(--experienceWidth);
  height: var(--experienceHeight);
  padding: var(--paddingPixel);
  border-radius: var(--experienceBorderRadius);
  outline: var(--experienceOutlineWidth) var(--colorOrange64) solid;
  outline-offset: var(--experienceOutlineOffset);
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  display: flex;
}

.hero-widget-experience-number {
  text-align: center;
  justify-content: center;
  display: flex;
  flex-direction: column;
  color: var(--colorOrange64);
  font-size: var(--experienceFontSize);
  font-family: 'Open Sans';
  font-weight: var(--experienceWeightExtrabold);
  line-height: var(--experienceLineHeight);
  word-wrap: break-word;
}

.hero-widget-experience-text {
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  display: inline-flex;
  justify-content: center;
  display: flex;
  flex-direction: column;
  color: var(--colorGrey15);
  font-size: var(--bodyFontSize);
  font-family: 'Open Sans';
  font-weight: var(--bodyWeightNormal);
  line-height: var(--bodyLineHeight);
  word-wrap: break-word;
}

.hero-widget-reviews {
  align-self: stretch;
  justify-content: flex-start;
  align-items: center;
  gap: var(--gapMedium);
  display: flex;
}

.hero-widget-logo-container {
  max-width: var(--logoMaxWidth);
  overflow: hidden;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  display: inline-flex;
}

.hero-widget-logo {
  width: var(--logoWidth);
  height: var(--logoHeight);
  overflow: hidden;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  display: flex;
}

.hero-widget-logo img {
  width: 100%;
  height: 100%;
}

.hero-widget-reviews-text {
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  display: inline-flex;
  justify-content: center;
  display: flex;
  flex-direction: column;
  color: var(--colorGrey15);
  font-size: var(--bodyFontSize);
  font-family: 'Open Sans';
  font-weight: var(--bodyWeightNormal);
  line-height: var(--bodyLineHeight);
  word-wrap: break-word;
}

.hero-widget-media {
  width: var(--mediaWidth);
  align-self: stretch;
  max-width: var(--mediaMaxWidth);
  position: relative;
  border-radius: 0.5rem;
}

/* Tooltip styles */
.item_hover { position: relative; cursor: help; }
.item_hover:hover .item_tooltip {
  display: block !important;
  position: absolute;
  background: white;
  color: var(--colorGrey15);
  padding: 1rem;
  border-radius: 0.5rem;
  width: var(--tooltipWidth);
  top: 100%;
  left: 0;
  z-index: 1000;
  font-size: 0.875rem;
  line-height: 1.4;
  box-shadow: var(--tooltipShadow);
}

/* Responsive design */
@media (max-width: var(--responsiveBreakpoint)) {
  .hero-widget-container {
    padding-left: var(--mobilePadding);
    padding-right: var(--mobilePadding);
  }
  
  .hero-widget-features {
    gap: var(--mobileGap);
  }
  
  .hero-widget-media {
    width: var(--mobileMediaWidth);
    max-width: var(--mobileMediaWidth);
  }
}
</style>

